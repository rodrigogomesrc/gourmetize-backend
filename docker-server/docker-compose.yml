version: "3.9"

networks:
  gourmetize-network:
    name: gourmetize
    external: false

services:
  postgres:
    image: postgres:${POSTGRESQL_VERSION}
    container_name: ${POSTGRESQL_HOST}
    hostname: ${POSTGRESQL_HOST}
    ports:
      - ${POSTGRESQL_PORT_EXTERNAL}:${POSTGRESQL_PORT}
    volumes:
      - ${POSTGRESQL_PATH}:/var/lib/postgresql/data
    networks:
      - gourmetize-network
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: "America/Fortaleza"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 30s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "1g"
        max-file: "3"
  backend:
    container_name: backend
    build: ../
    ports:
      - "8080:8080"
    networks:
      - gourmetize-network
    environment:
      TZ: "America/Fortaleza"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:8080/receitas" ]
      interval: 10s
      timeout: 3s
      retries: 60

  minio:
    image: quay.io/minio/minio
    container_name: minio
    hostname: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - gourmetize-network
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
      interval: 30s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "1g"
        max-file: "3"

volumes:
  minio_data: